Functions:
    - functions let us store a code and reuse it again whenever we need it
    - "def" keyword:
        - basically it is used to create functions
        
    - variables inside functions are local which means whenever you declare a variable inside a function you can't call that variable outside of the function 
    - functions can be called as "function_name()". And you shouldn't forget that if you want call a function you have to add parentheses at the end of the function's name otherwise you will just return the code inside the function
    - when a function call started code process pauses for a brief moment until the function returns a value to use it in the process
    - whenever you are calling a function you have to do it after you wrote the function
    Argument: 
        - values(string, numbers, etc.) that are passed to functions inside the parentheses while calling the function(e.g. function_name(argument))

    Parameter: 
        - variables written inside the parentheses when defining the function
        (e.g.
            function_name(parameter):
                code for function
        )

    - you can have multiple parameters/arguments(each one has to be seperated with a comma)

    "return" keyword:
        - returns the residual value(result value) after function's code completed to use it throughout the code
        - codes after "return" keyword are not gonna be executed. Which means they are ignored
        - a function that doesn't return anything is called "non-fruitful function"
        - a function that returns something is called "fruitful function"
    
    